import React, {useState} from "react";
import classnames from "classnames"
import urlqueryobject from "urlqueryobject"

import TextField from "../TextField"
import Label from "../Label"

import styles from "./index.module.scss"

const numberWithSpaces = n => n.toString().replace(/\B(?=(\d{3})+(?!\d))/g, " ")
const transformSum = n => `${numberWithSpaces(n).toLocaleString()} ‚ÇΩ`
const getHelperTextBySum = sum => {
	return [
		{
			sum: 0,
			text: "–ú–∏–Ω–∏–º—É–º 100 ‚ÇΩ",
		},
		{
			sum: 100,
			text: "–ù–∞ —Ç–∞–∫—Å–∏ –¥–æ —Ä–∞–±–æ—Ç—ã üöï",
		},
		{
			sum: 110,
			text: "–ù–∞ –ø–∏–≤–∞—Å–∏–∫ üç∫",
		},
		{
			sum: 120,
			text: "–ù–∞ –∞–º–µ—Ä–∏–∫–∞–Ω–æ ‚òï",
		},
		{
			sum: 130,
			text: "–ù–∞ –ø–ª–∏—Ç–∫—É —à–æ–∫–æ–ª–∞–¥–∞ üç´",
		},
		{
			sum: 150,
			text: "–ù–∞ –∫–∞–ø—É—á–∏–Ω–æ ‚òï",
		},
		{
			sum: 180,
			text: "–ù–∞ —à–∞—É—Ä–º—É üåÆ",
		},
		{
			sum: 200,
			text: "–ù–∞ –±–∏–ª–µ—Ç –≤ –∫–∏–Ω–æ üé´",
		},
		{
			sum: 400,
			text: "–ù–∞ –±–µ–Ω–∑–∏–Ω ‚õΩ",
		},
		{
			sum: 450,
			text: "–ù–∞ —Ä–µ–∫–ª–∞–º—É –ø—Ä–æ–µ–∫—Ç–æ–≤ üì£",
		},
		{
			sum: 500,
			text: "–ù–∞ –ø—Ä–µ–∑–µ—Ä–≤–∞—Ç–∏–≤—ã üçÜ",
		},
		{
			sum: 600,
			text: "–ù–∞ –∞—Ä–µ–Ω–¥—É —Å–µ—Ä–≤–µ—Ä–∞ üë®‚Äçüíª",
		},
		{
			sum: 1000,
			text: "–ù–∞ –ø–æ–¥–∞—Ä–æ–∫ –º–∞–º–µ ‚ù§",
		},
		{
			sum: 1500,
			text: "–ù–∞ –æ–ø–ª–∞—Ç—É –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–∞ üåê",
		},
		{
			sum: 2000,
			text: "–ù–∞ –æ–ø–ª–∞—Ç—É –∫–æ–º–º—É–Ω–∞–ª–∫–∏ üè†",
		},
		{
			sum: 2200,
			text: "–ù–∞ —Å–µ–∞–Ω—Å —É –ø—Å–∏—Ö–æ–ª–æ–≥–∞ üò™",
		},
		{
			sum: 2500,
			text: "–ù–∞ –Ω–æ–≤—ã–µ Mi Band üïê",
		},
		{
			sum: 3000,
			text: "–ù–∞ –∫—É—Ä—Å—ã –∞–Ω–≥–ª–∏–π—Å–∫–æ–≥–æ üá¨üáß",
		},
		{
			sum: 4000,
			text: "–ù–∞ –±–∏–ª–µ—Ç –¥–æ –ù—É—Ä-–°—É–ª—Ç–∞–Ω–∞ ‚úà",
		},
		{
			sum: 4500,
			text: "–ù–∞ –Ω–æ–≤—É—é –∫—É—Ä—Ç–∫—É üß•",
		},
		{
			sum: 5000,
			text: "–ù–∞ –∫—É—Ä—Å—ã –ø–æ —ç–ª–µ–∫—Ç—Ä–æ–≥–∏—Ç–∞—Ä–µ üé∏",
		},
		{
			sum: 6000,
			text: "–ù–∞ –Ω–æ–≤—É—é –∑–≤—É–∫–æ–≤—É—é –∫–∞—Ä—Ç—É üéµ",
		},
		{
			sum: 10000,
			text: "–ú–∞–º–µ –Ω–∞ –ø—ã–ª–µ—Å–æ—Å üí®",
		},
		{
			sum: 20000,
			text: "–ù–∞ —Ö–æ–ª–æ–¥–∏–ª—å–Ω–∏–∫ ‚ùÑ",
		},
		{
			sum: 30000,
			text: "–ù–∞ –Ω–æ–≤—ã–π —Ç–µ–ª–µ—Ñ–æ–Ω üì±",
		},
		{
			sum: 40000,
			text: "–ù–∞ —Å–∏–Ω—Ç–µ–∑–∞—Ç–æ—Ä üéπ",
		},
		{
			sum: 60000,
			text: "–ù–∞ –Ω–æ–≤—ã–π –Ω–æ—É—Ç üíª",
		},
		{
			sum: 100000,
			text: "–ù–∞ –º–∞–∫–±—É–∫ üíª",
		},
		{
			sum: 200000,
			text: "–ù–∞ –±–ª–∞–≥–æ—Ç–≤–æ—Ä–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å ‚ù§",
		},
		{
			sum: 500000,
			text: "–ù–∞ –Ω–æ–≤—É—é –º–∞—à–∏–Ω—É üöó",
		},
		{
			sum: 1000000,
			text: "–í—ã —É–≤–µ—Ä–µ–Ω—ã? üò®",
		},
		{
			sum: 5000000,
			text: "–Ø –Ω–µ –∑–∞—Å–ª—É–∂–∏–ª üò•",
		},
	]
		.filter(item => item.sum <= sum)
		.slice(-1)
		[0]?.text || ""
}

const YooMoneyForm = props => {
	const {className, ...rest} = props

	const params = urlqueryobject()
	const paymentTypes = [
		{
			value: "PC",
			label: "–ò–∑ –∫–æ—à–µ–ª—å–∫–∞ –ÆMoney",
			image: require("../../img/wallet.svg").default,
		},
		{
			value: "AC",
			label: "–° –±–∞–Ω–∫–æ–≤—Å–∫–æ–π –∫–∞—Ä—Ç—ã",
			image: require("../../img/card.svg").default,
		},
		{
			value: "MC",
			label: "–° –±–∞–ª–∞–Ω—Å–∞ –º–æ–±–∏–ª—å–Ω–æ–≥–æ",
			image: require("../../img/phone.svg").default,
		},
	]

	const [comment, setComment] = useState(params.comment ? decodeURI(params.comment) : "")
	const [sum, setSum] = useState(params.sum ? transformSum(params.sum) : "")
	const [payBy, setPayBy] = useState(paymentTypes.find(item => item.value === params.payby) ? params.payby : "PC")

	const sumOnChange = e => {
		const value = e.target.value.replace(/\D/g, "")
		if (value === "") return setSum("");
		const newValue = transformSum(value)
		setSum(newValue)

		window.requestAnimationFrame(() => {
			const cursorPosition = newValue.length - 2
			e.target.setSelectionRange(cursorPosition, cursorPosition)
		})
	}

	const pureSum = Number(sum.replace(/\D/g, ""))
	const canPay = (
		pureSum >= 100 && (
			["PC", "MC"].includes(payBy) ||
			(payBy === "AC" && pureSum <= 15000)
		)
	)

	return (
		<form
			method="POST"
			action="https://yoomoney.ru/quickpay/confirm.xml"
			className={classnames(styles.root, className)}
			{...rest}
		>
			<input type="hidden" name="receiver" value="4100117319944149" />
			<input type="hidden" name="formcomment" value="–î–æ–Ω–∞—Ç –ú–∏—à–µ" />
			<input type="hidden" name="short-dest" value="–î–æ–Ω–∞—Ç –ú–∏—à–µ" />
			{/*<input type="hidden" name="label" value="$order_id" />*/}
			<input type="hidden" name="quickpay-form" value="donate" />
			<input type="hidden" name="targets" value="–î–æ–Ω–∞—Ç –ú–∏—à–µ" />
			<input type="hidden" name="sum" value={pureSum} />
			<TextField
				label="–°—É–º–º–∞, ‚ÇΩ"
				placeholder="–ú–∏–Ω–∏–º—É–º 100 ‚ÇΩ"
				value={sum}
				onChange={sumOnChange}
				required
				helperText={pureSum > 0 && getHelperTextBySum(pureSum)}
				errorText={payBy === "AC" && pureSum > 15000 ? "–ü–æ –∫–∞—Ä—Ç–µ –º–∞–∫—Å–∏–º—É–º 15 000 ‚ÇΩ" : null}
			/>
			<br />

			<Label>–û—Ç–∫—É–¥–∞ –ø–µ—Ä–µ–≤–æ–¥–∏–º?</Label>
			<input type="hidden" name="paymentType" value={payBy} />
			<div className={styles.radio}>
				{paymentTypes.map(({value, label, image}) => <div
					key={value}
					className={styles.radioButton}
					data-active={payBy === value}
					onClick={() => setPayBy(value)}
				>
					<img alt={label} className={styles.inlineImage} src={image} />
				</div>)}
			</div>
			<div className={styles.helper}>{paymentTypes.find(item => item.value === payBy).label}</div>
			<br />

			<TextField
				label="–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π"
				name="comment"
				textarea
				placeholder="–ù–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ"
				value={comment}
				onChange={e => setComment(e.target.value)}
			/>
			<br />

			<input type="hidden" name="need-fio" value="false" />
			<input type="hidden" name="need-email" value="false" />
			<input type="hidden" name="need-phone" value="false" />
			<input type="hidden" name="need-address" value="false" />

			<input
				type="submit"
				value="–ü–µ—Ä–µ–≤–µ—Å—Ç–∏"
				className={styles.submit}
				disabled={!canPay}
			/>
		</form>
	)
}

export default YooMoneyForm
